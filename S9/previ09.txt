SIMPLE: 1 bit signe + 8 bits exponent + 23 bits fraccio
DOBLE: 1 bit signe + 11 bits exponent + 52 bits fraccio

https://baseconvert.com/ieee-754-floating-point
https://www.h-schmidt.net/FloatConverter/IEEE754.html

1. 35.125:
En simple precisión: 0100 0010 0000 1100 1000 0000 0000 0000                                         (0x420C8000)
En doble precisión: 0100 0000 0100 0001 1001 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000  (0x4041900000000000)

2. -262144.7:
Se codifica exacto en simple precisión (S/N): No
Error en simple precisión: |-262144.7 - -262144.6875| = 0.0125
Se codifica exacto en doble precisión (S/N): No

https://computo-pedrito.blogspot.com/2012/03/ensamblador.html
https://en.wikipedia.org/wiki/X86_instruction_listings
https://docs.oracle.com/cd/E19455-01/806-3773/6jct9o0af/index.html

3.
flds: obtenir nombre en coma flotant
fmuls: multiplicació coma flotant
fadds: suma coma flotant
fstps: pop d'un nombre en coma flotant

4.
_________Bernat_____________
MIPS: 15/1.3*10^-6 = 11.538
MFLOPS: 2/1.3*10^-6 = 1.538

MIPS: 10/1.1*10^-6 =  9.091
MFLOPS: 2/1.1*10^-6 = 1.818

Speedup: 1.3/1.1 = 1.182
Comentaris: El segon programa, té un CPI major, fent que tingui menys capacitat de càlcul (en MIPS), però si només tenim en compte les operacions de coma flotant, té més capacitat de càlcul (en MFLOPS)

__________Miquel____________
Codi ASM 1 (1,3 µs):
MIPS= (13*256+2)/1.3= 2561.53; MFLOPS= (256*2)/1.3= 393.84

Codi ASM 2 (1,1 µs):
MIPS= (7*256+3)/1.1= 1631.81; MFLOPS= (2*256)/1.1= 465.45

SpeedUp = 1.3/1.1 = 1.181818

-> El codi 1 realitza instruccions que el 2 s'estalvia
